name: test

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "v*.*.*"
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Go Mod Download
        run: go mod download

      - name: Go Lint
        uses: golangci/golangci-lint-action@v3

  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Go Mod Download
        run: go mod download

      - name: Go Test
        run: go test -v -short -cover ./...

  integration-test:
    runs-on: ubuntu-latest
    services:
      dynamodb:
        image: amazon/dynamodb-local
        ports:
          - "8000:8000"
        options: >-
          --health-cmd "curl -s http://localhost:8000 -o /dev/null || exit 1"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 5
    container:
      image: golang:1.22.0
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Go Mod Download
        run: go mod download

      - name: Go Test
        run: go test -run ^*IntegrationTestSuite$ -v ./...
        env:
          AWS_REGION: ap-northeast-1
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
